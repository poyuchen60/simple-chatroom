{"version":3,"sources":["components/Modal.js","components/NavigationBar/UserInfoDialog.js","components/NavigationBar/InvitationDialog.js","components/NavigationBar/NavigationBar.js","components/Chatroom/UserInviteDialog.js","components/Chatroom/Chatroom.js","components/Lobby/NewRoomDialog.js","components/Lobby/Lobby.js","App.js","serviceWorker.js","index.js"],"names":["modalRoot","document","getElementById","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","Component","UserInfoDialog","state","name","intro","handleTextChange","event","setState","defineProperty","target","value","handleSubmit","_this$state","_this$props","onSubmit","onClose","_this$state2","react_default","a","Dialog_default","open","DialogTitle_default","DialogContent_default","TextField_default","onChange","margin","label","type","fullWidth","DialogActions_default","Button_default","onClick","color","InvitationDialog","invitations","onDecline","onAccept","maxWidth","List_default","map","_ref","id","user","chatroom","ListItem_default","key","ListItemText_default","primary","concat","ListItemSecondaryAction_default","IconButton_default","aria-label","Check_default","Close_default","NavigationBar","userDialog","invitationDialog","handleDialogOpen","dialog","handleDialogClose","info","onInfoUpdate","classes","chatrooms","index","onSelect","onLeave","react","Typography_default","align","variant","gutterBottom","className","buttonGroup","Face_default","Badge_default","badgeContent","length","Mail_default","Home_default","charoomList","c","i","members","unread","button","Avatar_default","Image_default","secondary","Clear_default","components_Modal","NavigationBar_UserInfoDialog","NavigationBar_InvitationDialog","withStyles","theme","display","justifyContent","width","UserInviteDialog","onInvite","selected","handleSearchUsers","socket","text","emit","users","handleUserSelect","componentDidMount","aria-labelledby","disabled","ChatroomInput","handleEnter","e","shiftKey","preventDefault","handleSubmitSuccess","locked","onSend","inputRef","React","createRef","input","textWraper","autoFocus","onKeyDown","multiline","rowsMax","InputProps","inputText","placeholder","InputLabelProps","shrink","buttonWraper","inputButton","Chatroom","_this2","scrollToBottom","behavior","scrollDownHelper","current","scrollIntoView","componentDidUpdate","_this2$props","_this2$props$chatroom","onRead","atBottom","handleScroll","_this2$messagesDiv$cu","messagesDiv","clientHeight","scrollTop","scrollHeight","selectedMember","undefined","inviteDialog","handleMemberSelect","member","handleInviteDialogOpen","_this$props$chatroom","messages","Chatroom_UserInviteDialog","AppBar_default","position","Toolbar_default","main","message","unreadButton","KeyboardArrowDown_default","ref","onScroll","list","m","Person_default","Chatroom_ChatroomInput","paddingTop","height","flex","backgroundColor","overflowY","paddingLeft","alignItems","left","bottom","zIndex","NewRoomDialog","RoomCard","onJoin","Card_default","card","CardContent_default","CardActions_default","size","Lobby","newRoomDialogOpen","on","_ref2","newChatroom","toConsumableArray","push","findIndex","objectSpread","splice","console","log","componentWillUnmount","off","handleNewChatroom","options","arguments","cardContainer","_ref3","Lobby_RoomCard","Lobby_NewRoomDialog","flexWrap","App","handleLogin","handleUserInvite","chatroomId","inviteeId","handleChatroomRead","other","handleChatroomSelect","chatroomIndex","handleChatroomJoin","data","_chatrooms$id","sysMsg","userId","handleChatroomLeave","indexOf","newIndex","filter","newChatrooms","handleSendMessage","callback","err","handleInfoUpdate","handleDecline","invitationId","handleAccept","io","_this$state3","chatroomList","container","CssBaseline_default","nav","components_NavigationBar_NavigationBar","components_Chatroom_Chatroom","components_Lobby_Lobby","borderRight","Boolean","window","location","hostname","match","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32af114b.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass UserInfoDialog extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    intro: this.props.intro,\r\n  }\r\n\r\n  handleTextChange = name => \r\n    event => this.setState({[name]: event.target.value});\r\n  \r\n  handleSubmit = () => {\r\n    const { name, intro } = this.state;\r\n    const { onSubmit, onClose } = this.props;\r\n    onSubmit({name, intro});\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const { onClose } = this.props;\r\n    const { name, intro } = this.state;\r\n    const { handleTextChange, handleSubmit } = this;\r\n    return <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>個人資料</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          value={name}\r\n          onChange={handleTextChange(\"name\")}\r\n          margin=\"dense\"\r\n          label=\"名稱\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          value={intro}\r\n          onChange={handleTextChange(\"intro\")}\r\n          margin=\"dense\"\r\n          label=\"自我介紹\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  }\r\n}\r\n\r\n\r\nexport default UserInfoDialog;","import React from 'react';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AcceptIcon from '@material-ui/icons/Check';\r\nimport DeclineIcon from '@material-ui/icons/Close';\r\n\r\nconst InvitationDialog = (props) => {\r\n  const { invitations, onClose, onDecline, onAccept } = props;\r\n\r\n  return <Dialog\r\n    open={true}\r\n    onClose={onClose}\r\n    maxWidth='sm'\r\n    fullWidth\r\n  >\r\n    <DialogTitle>邀請</DialogTitle>\r\n    <DialogContent>\r\n      <List>\r\n        {invitations.map( ({id, user, chatroom}) => <ListItem\r\n          key={id}\r\n        >\r\n          <ListItemText\r\n            primary={`${user} 邀請你至 ${chatroom} 聊天室`}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton onClick={onAccept(id)} aria-label=\"accept\">\r\n              <AcceptIcon />\r\n            </IconButton>\r\n            <IconButton onClick={onDecline(id)} aria-label=\"decline\">\r\n              <DeclineIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>)}\r\n      </List>\r\n    </DialogContent>\r\n  </Dialog>\r\n}\r\n\r\nexport default InvitationDialog;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../Modal';\r\nimport UserInfoDialog from './UserInfoDialog';\r\nimport InvitationDialog from './InvitationDialog';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  buttonGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n  charoomList: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass NavigationBar extends Component {\r\n  state = {\r\n    userDialog: true,\r\n    invitationDialog: false\r\n  }\r\n\r\n  handleDialogOpen = dialog => () => this.setState({[dialog]: true});\r\n  handleDialogClose = () => this.setState({\r\n    userDialog: false,\r\n    invitationDialog: false\r\n  });\r\n  handleSubmit = (info) => {\r\n    const { onInfoUpdate } = this.props;\r\n    onInfoUpdate(info);\r\n  }\r\n\r\n  render(){\r\n    const { handleDialogClose, handleDialogOpen, handleSubmit } = this;\r\n    const { userDialog, invitationDialog } = this.state;\r\n    const {\r\n      classes, chatrooms, invitations, index,\r\n      onSelect, name, intro, onLeave, onDecline, onAccept\r\n    } = this.props;\r\n\r\n    return <Fragment>\r\n      <Typography align='center' variant=\"h3\" gutterBottom>\r\n        Chatroom\r\n      </Typography>\r\n      <div className={classes.buttonGroup}>\r\n        <IconButton\r\n          onClick={handleDialogOpen('userDialog')}\r\n          aria-label=\"UserInfo\"\r\n        >\r\n          <FaceIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDialogOpen('invitationDialog')}          \r\n          aria-label=\"Invitation\"\r\n        >\r\n          <Badge color=\"secondary\" badgeContent={invitations.length}>\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton onClick={onSelect(-1)} aria-label=\"Lobby\">\r\n          <HomeIcon />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.charoomList}>\r\n      {chatrooms.map( (c, i) => {\r\n        const { name, members, id, unread } = c;\r\n        return <ListItem\r\n          onClick={onSelect(i)}\r\n          button \r\n          key={`chatroom(${id})`}\r\n        >\r\n          <Badge color='secondary' badgeContent={index === i ? 0 : unread}>\r\n            <Avatar>\r\n              <ImageIcon />\r\n            </Avatar>\r\n          </Badge>\r\n          <ListItemText primary={name} secondary={`人數: ${members.length}`} />\r\n          <ListItemSecondaryAction>\r\n            <IconButton onClick={onLeave(id)}aria-label=\"LeaveChatroom\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      })}\r\n    </List>\r\n    {userDialog && <Modal>\r\n      <UserInfoDialog\r\n        name={name}\r\n        intro={intro}\r\n        onClose={handleDialogClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </Modal>}\r\n    {invitationDialog && !userDialog &&<Modal>\r\n      <InvitationDialog\r\n        onAccept={onAccept}\r\n        onDecline={onDecline}\r\n        invitations={invitations}\r\n        onClose={handleDialogClose}\r\n      />\r\n    </Modal>}\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavigationBar);","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nclass UserInviteDialog extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      users: [],\r\n      selected: [-1],\r\n    }\r\n  }\r\n  handleSubmit = () => {\r\n    const { onInvite, onClose } = this.props;\r\n    const { selected } = this.state;\r\n    if(selected[0] !== -1)\r\n      onInvite(selected[0]);\r\n    onClose();\r\n  }\r\n  handleSearchUsers = () => {\r\n    const { socket } = this.props;\r\n    const { text } = this.state;\r\n    socket.emit('all_users', text , users => this.setState({users}));\r\n  }\r\n  handleUserSelect = (id) => () => this.setState({selected: [id]});\r\n\r\n  componentDidMount = () => {\r\n    this.handleSearchUsers();\r\n  }\r\n\r\n  render(){\r\n    const { handleUserSelect, handleSubmit } = this;\r\n    const { onClose } = this.props;\r\n    const { users, selected } = this.state;\r\n    return <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n      aria-labelledby=\"user-invite-dialog\"\r\n    >\r\n      <DialogTitle>邀請</DialogTitle>\r\n      <DialogContent>\r\n        <List>\r\n          {users.map( ({id, name}) =>\r\n            <ListItem\r\n              button\r\n              selected={selected[0] === id}\r\n              onClick={handleUserSelect(id)}\r\n              key={id}\r\n            >\r\n              <ListItemText primary={name}/>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          disabled={selected[0] === -1}\r\n          color=\"primary\"\r\n        >\r\n          邀請\r\n        </Button>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n      </DialogActions>\r\n  </Dialog>\r\n  }\r\n}\r\n\r\nexport default UserInviteDialog;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../Modal';\r\nimport UserInviteDialog from './UserInviteDialog';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ArrowIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    paddingTop: '5px',\r\n    height: 'calc(100% - 68px)',\r\n    display: 'flex'\r\n  },\r\n  message: {\r\n    flex: 1,\r\n    height: '100%'\r\n  },\r\n  members: {\r\n    width: '200px',\r\n    height: '100%',\r\n    backgroundColor: \"#ffe6e6\",\r\n    overflowY: 'auto'\r\n  },\r\n  list:{\r\n    height: 'calc(100% - 100px)',\r\n    overflowY: 'scroll'\r\n  },\r\n  input: {\r\n    height: '100px',\r\n    backgroundColor: '#e6f7ff',\r\n    display: 'flex',\r\n  },\r\n  inputButton: {\r\n    height: '50px',\r\n  },\r\n  inputText: {\r\n    height: '72px'\r\n  },\r\n  textWraper: {\r\n    flex: 1,\r\n    paddingLeft: '10px'\r\n  },\r\n  buttonWraper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100px'\r\n  },\r\n  unreadButton: {\r\n    position: 'fixed',\r\n    left: '50%',\r\n    bottom: '120px',\r\n    zIndex: 10\r\n  }\r\n})\r\n\r\nclass ChatroomInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = ({\r\n      text: '',\r\n      locked: false\r\n    });\r\n    this.inputRef = React.createRef();\r\n  }\r\n \r\n\r\n  handleEnter = e => {\r\n    if(e.key === 'Enter' && !e.shiftKey){\r\n      e.preventDefault();\r\n      this.handleSubmit();\r\n    }\r\n  }\r\n\r\n  handleTextChange = event => {\r\n    this.setState({text: event.target.value})\r\n  };\r\n  handleSubmitSuccess = () => {\r\n    this.setState({locked: false, text: ''});\r\n  };\r\n  \r\n  handleSubmit = () => {\r\n    const { text, locked } = this.state;\r\n    const { onSend } = this.props;\r\n    if (!locked && text.length > 0){\r\n      onSend(text, this.handleSubmitSuccess);\r\n      this.setState({locked: true});\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    const { text } = this.state;\r\n    const { handleTextChange, handleSubmit, handleEnter, inputRef } = this;\r\n    return <div className={classes.input}>\r\n      <div className={classes.textWraper}>\r\n        <TextField\r\n          autoFocus\r\n          inputRef={inputRef}\r\n          onKeyDown={handleEnter}\r\n          value={text}\r\n          onChange={handleTextChange}\r\n          fullWidth\r\n          multiline\r\n          rowsMax=\"2\"\r\n          InputProps={{className: classes.inputText}}\r\n          label=\"訊息\"\r\n          className={classes.inputText}\r\n          placeholder=\"在此輸入訊息...\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.buttonWraper}>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          color='default'\r\n          className={classes.inputButton}\r\n        >傳送</Button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nclass Chatroom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.scrollDownHelper = React.createRef();\r\n    this.messagesDiv = React.createRef();\r\n    this.state = {\r\n      selectedMember: undefined,\r\n      inviteDialog: false,\r\n      atBottom: true,\r\n    }\r\n  }\r\n  scrollToBottom = (behavior) => this.scrollDownHelper.current\r\n    .scrollIntoView({ behavior: behavior || \"auto\" });\r\n  componentDidUpdate = () => {\r\n    const { chatroom: {id, unread}, onRead } = this.props;\r\n    if(this.state.atBottom){\r\n      this.scrollToBottom('auto');\r\n      unread > 0 && onRead(id);\r\n    }\r\n  }\r\n  componentDidMount = () => this.scrollToBottom('auto');\r\n  handleScroll = () => {\r\n    const {\r\n      clientHeight, scrollTop, scrollHeight\r\n    } = this.messagesDiv.current;\r\n    const atBottom = scrollTop + clientHeight >= scrollHeight;\r\n    (atBottom !== this.state.atBottom) && this.setState({atBottom});\r\n  }\r\n  handleDialogClose = () => this.setState({\r\n    selectedMember: undefined,\r\n    inviteDialog: false\r\n  });\r\n  handleMemberSelect = (member) => this.setState({selectedMember: member});\r\n  handleInviteDialogOpen = () => this.setState({inviteDialog: true});\r\n\r\n  render(){\r\n    const { \r\n      chatroom: {\r\n        name, members, messages, unread\r\n      },\r\n      classes, onSend, socket, onInvite\r\n    } = this.props;\r\n    const { selectedMember, inviteDialog } = this.state;\r\n    const {\r\n      handleDialogClose, handleMemberSelect, handleInviteDialogOpen,\r\n      handleScroll, scrollToBottom\r\n    } = this;\r\n    return <Fragment>\r\n      {selectedMember && <Modal>\r\n        <Dialog\r\n          open={true}\r\n          onClose={handleDialogClose}\r\n          aria-labelledby=\"chatroom-member-dialog\"\r\n        >\r\n          <DialogTitle>{selectedMember.name}</DialogTitle>\r\n          <DialogContent>{selectedMember.intro}</DialogContent>\r\n        </Dialog>\r\n      </Modal>}\r\n      { inviteDialog && !selectedMember && <Modal>\r\n        <UserInviteDialog\r\n          onInvite={onInvite}\r\n          onClose={handleDialogClose}\r\n          socket={socket}\r\n        />\r\n      </Modal>}\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {name}\r\n          </Typography>\r\n          <Button\r\n            color='inherit'\r\n            onClick={handleInviteDialogOpen}\r\n          >邀請</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.main}>\r\n        <div className={classes.message}>\r\n            {unread > 0 && <Button\r\n              onClick={() => scrollToBottom()}\r\n              className={classes.unreadButton}\r\n            >{`新訊息: ${unread}`}<ArrowIcon /></Button>}\r\n          <div\r\n            ref={this.messagesDiv}\r\n            onScroll={handleScroll}\r\n            className={classes.list}\r\n          >\r\n            <List className={classes.charoomList}>\r\n              {messages.map( (m, index) => {\r\n                const { name, text } = m;\r\n                return <ListItem\r\n                  key={index}\r\n                >\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                  <ListItemText primary={name} secondary={text}/>\r\n                </ListItem>\r\n              })}\r\n            </List>\r\n            <div ref={this.scrollDownHelper}></div>\r\n          </div>\r\n          <ChatroomInput classes={classes} onSend={onSend}/>\r\n        </div>\r\n        <aside className={classes.members}>\r\n          <List>\r\n            {members.map( m => {\r\n              const { name, id } = m;\r\n              return <ListItem\r\n                button \r\n                onClick={() => handleMemberSelect(m)}\r\n                key={`user#${id}`}\r\n              >\r\n                <Avatar>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n                <ListItemText primary={name}/>\r\n              </ListItem>\r\n            })}\r\n          </List>\r\n        </aside>\r\n      </div>\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Chatroom);","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass NewRoomDialog extends Component {\r\n  state = {\r\n    name: ''\r\n  }\r\n\r\n  handleTextChange = event => this.setState({name: event.target.value});\r\n  handleSubmit = () => {\r\n    const { onSubmit, onClose } = this.props;\r\n    const { name } = this.state;\r\n    onSubmit({name});\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const { name } = this.state;\r\n    const { onClose } = this.props;\r\n    const { handleTextChange, handleSubmit } = this;\r\n    return <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>建立新聊天室</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          value={name}\r\n          onChange={handleTextChange}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"房名\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  }\r\n}\r\n\r\n\r\nexport default NewRoomDialog;","import React, { Component } from 'react';\r\nimport Modal from '../Modal';\r\nimport NewRoomDialog from './NewRoomDialog';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 200,\r\n    margin: 10\r\n  },\r\n  cardContainer: {\r\n    margin: 20,\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  }\r\n});\r\n\r\nconst RoomCard = ({name, members, classes, onJoin}) => <Card className={classes.card}>\r\n  <CardContent>\r\n    <Typography variant=\"h6\">\r\n      {name}\r\n     </Typography>\r\n    <Typography color=\"textSecondary\" gutterBottom>\r\n      {`成員: ${members}`}\r\n    </Typography>\r\n  </CardContent>\r\n  <CardActions>\r\n    <Button onClick={onJoin} size=\"small\">Join</Button>\r\n  </CardActions>\r\n</Card>\r\n\r\nclass Lobby extends Component {\r\n  state = {\r\n    chatrooms: [],\r\n    newRoomDialogOpen: false\r\n  }\r\n  componentDidMount = () => {\r\n    const { socket } = this.props;\r\n    socket.emit(\"join_lobby\", chatrooms => {\r\n      this.setState({chatrooms}, () => {\r\n        socket.on(\"lobby\", ({type, value}) => {\r\n          let chatrooms = [...this.state.chatrooms];\r\n          let index, newChatroom;\r\n          switch(type){\r\n            case \"new_chatroom\":\r\n              chatrooms.push(value);\r\n              break;\r\n            case \"new_member\":\r\n              index = chatrooms.findIndex( c => c.id === value);\r\n              newChatroom = {...chatrooms[index]};\r\n              newChatroom.members = newChatroom.members + 1;\r\n              chatrooms.splice(index, 1, newChatroom);\r\n              break;\r\n            case \"delete_member\":\r\n              index = chatrooms.findIndex( c => c.id === value);\r\n              newChatroom = {...chatrooms[index]};\r\n              newChatroom.members = newChatroom.members - 1;\r\n              chatrooms.splice(index, 1, newChatroom);\r\n              break;\r\n            default:\r\n              console.log(\"default\");\r\n          }\r\n          this.setState({chatrooms});\r\n        });\r\n      })\r\n    })\r\n  }\r\n  componentWillUnmount = () => {\r\n    const { socket } = this.props;\r\n    socket.off(\"lobby\");\r\n  }\r\n  handleNewChatroom = (options={}) => {\r\n    const { socket } = this.props;\r\n    socket.emit('create_chatroom', options);\r\n  }\r\n  handleDialogOpen = () => this.setState({newRoomDialogOpen: true});\r\n  handleDialogClose = () => this.setState({newRoomDialogOpen: false});\r\n\r\n  render(){\r\n    const { classes, onJoin } = this.props;\r\n    const { chatrooms, newRoomDialogOpen } = this.state;\r\n    const {\r\n      handleNewChatroom,\r\n      handleDialogOpen, handleDialogClose\r\n    } = this;\r\n    return <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Lobby\r\n          </Typography>\r\n          <Button\r\n            onClick={handleDialogOpen}\r\n            color='inherit'\r\n          >New</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.cardContainer}>\r\n        {chatrooms.map( ({name, members, id}) =>\r\n          <RoomCard\r\n            key={id}\r\n            name={name}\r\n            members={members}\r\n            classes={classes}\r\n            onJoin={onJoin(id)}\r\n          />\r\n        )}\r\n      </div>\r\n      {newRoomDialogOpen && <Modal>\r\n        <NewRoomDialog\r\n          onSubmit={handleNewChatroom}\r\n          onClose={handleDialogClose}\r\n        />\r\n      </Modal>}\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Lobby);","import React, { Component } from 'react';\nimport io from 'socket.io-client'\n\nimport NaviationBar from './components/NavigationBar/NavigationBar';\nimport Chatroom from './components/Chatroom/Chatroom';\nimport Lobby from './components/Lobby/Lobby'\nimport './App.css';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst styles = theme => ({\n  container:{\n    height: '100%',\n    display: 'flex'\n  },\n  nav: {\n    paddingTop: '50px',\n    width: '300px',\n    borderRight: '1px solid gray',\n    height: '100%'\n  },\n  main: {\n    flex: 1,\n    height: '100%'\n  }\n})\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      socket:  io('https://infinite-waters-19418.herokuapp.com/'),\n      invitations: [],\n      index: -1,\n      chatrooms: {},\n      chatroomIndex: [],\n      name: '', intro: '', id: -1,\n    }\n  }\n\n  componentDidMount = () => {\n    this.handleLogin();\n  }\n\n  handleLogin = () => {\n    const { socket } = this.state;\n    socket.emit('login', (info) => {\n      this.setState(info,\n        () => socket.on(`user#${info.id}`, ({type, value}) => {\n          let { invitations } = this.state;\n          switch(type){\n            case 'new_invitation':\n              invitations = [...invitations, value];\n              break;\n            default:\n              console.log('default');\n          }\n          this.setState({invitations});\n        })\n      );\n    });\n  }\n  handleUserInvite = (chatroomId) => (inviteeId) => {\n    const { socket } = this.state;\n    socket.emit('invite_user', {\n      inviteeId, chatroomId\n    }, console.log);\n  }\n  handleChatroomRead = (id, other) => {\n    const { chatrooms } = this.state;\n    const newChatroom = {...chatrooms[id], unread: 0}\n    this.setState({...other, chatrooms: {...chatrooms, [id]: newChatroom}});\n  }\n  handleChatroomSelect = (index) => () => {\n    if(index === this.state.index)\n      return;\n    else if(index >= 0){\n      const id = this.state.chatroomIndex[index];\n      this.handleChatroomRead(id, {index})\n    } else {\n      this.setState({index});\n    }\n  }\n  handleChatroomJoin = (chatroomId) => () => {\n    const { socket, chatrooms, chatroomIndex } = this.state;\n    socket.emit(\"join_chatroom\", chatroomId, chatroom => {\n      if(!chatroom) return;\n      const { id } = chatroom;\n      this.setState({\n        chatrooms: {...chatrooms, [id]: {...chatroom, unread: 0}},\n        chatroomIndex: [...chatroomIndex, id]\n      }, () => {\n        socket.on(`chatroom#${id}`, data => {\n          const { type, value } = data;\n          const { chatrooms } = this.state;\n          let { members, messages, name, unread } = chatrooms[id];\n          let i = -1, sysMsg = undefined;\n          switch(type){\n            case \"new_message\":\n              messages = [...messages, value];\n              unread = unread + 1;\n              break;\n            case \"new_member\":\n              members = [...members, value];\n              sysMsg = {\n                name: '系統訊息',\n                text: `${value.name || `User#${value.id}`} 加入聊天室`\n              }\n              break;\n            case \"delete_member\":\n              i = members.findIndex( m => m.id === value)\n              if(i >= 0){\n                sysMsg = {\n                  name: '系統訊息',\n                  text: `${members[i].name} 離開聊天室`\n                }\n                members.splice(i, 1);\n              }\n              break;\n            case \"update_member\":\n              i = members.findIndex( m => m.id === value.id);\n              messages = messages.map(m =>\n                m.userId === value.id \n                ? {...m, name: value.name}\n                : m\n              );\n              sysMsg = value.name === members[i].name\n                ? undefined\n                : {\n                  name: \"系統訊息\",\n                  text: `${members[i].name} 改名為 ${value.name}`\n                }\n              members.splice(i, 1, value);\n              break;\n            default:\n              console.log(\"default\");\n          }\n          this.setState({chatrooms: {...chatrooms, [id]:\n            {id, name, members, unread,\n              messages: sysMsg ? messages.concat(sysMsg) : messages\n            }\n          }});\n        })\n      })\n    })\n  }\n  handleChatroomLeave = chatroomId => () => {\n    const { socket } = this.state;\n    socket.emit(\"leave_chatroom\", chatroomId, id => {\n      if(id !== chatroomId ) console.log('Wrong!!')\n      else {\n        const { chatrooms, chatroomIndex, index } = this.state;\n        const i = chatroomIndex.indexOf(id);\n        const newIndex = chatroomIndex.filter( i => i !== id);\n        const newChatrooms = { ...chatrooms, [id]: undefined};\n        socket.off(`chatroom#${id}`);\n        this.setState({\n          chatrooms: newChatrooms,\n          chatroomIndex: newIndex,\n          index: index > i\n            ? index - 1\n            : index === i ? -1 : index,\n        });\n      }\n    })\n  }\n  handleSendMessage = chatroomId => (text, callback) => {\n    const { socket } = this.state;\n    socket.emit(\"new_message\", {chatroomId, text}, (err) => {\n      if(!err) callback && callback();\n    });\n  }\n  handleInfoUpdate = (info={}) => {\n    const { socket } = this.state;\n    socket.emit(\"update_info\", info, ({name, intro}) => {\n      this.setState({name, intro});\n    });\n  }\n  handleDecline = (invitationId) => () => {\n    const { socket } = this.state;\n    socket.emit('decline_invitation', invitationId, (err) => {\n      if(!err){\n        const invitations = this.state.invitations.filter( i => i.id !== invitationId);\n        this.setState({invitations});\n      }\n    })\n  }\n  handleAccept = (invitationId) => () => {\n    const { socket } = this.state;\n    socket.emit('accept_invitation', invitationId, (err, chatroomId) => {\n      if(!err){\n        const invitations = this.state.invitations.filter( i => i.id !== invitationId);\n        this.setState({invitations}, this.handleChatroomJoin(chatroomId));\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {\n      chatroomIndex, chatrooms, index,\n      invitations, socket, name, intro\n    } = this.state;\n    const {\n      handleChatroomSelect,\n      handleChatroomJoin, handleSendMessage,\n      handleInfoUpdate, handleChatroomLeave, handleUserInvite,\n      handleDecline, handleAccept, handleChatroomRead\n    } = this;\n    const chatroomList = chatroomIndex.map( id => chatrooms[id]);\n    return <div className={classes.container}>\n      <CssBaseline />\n      <nav className={classes.nav}>\n        <NaviationBar\n          index={index}\n          onAccept={handleAccept}\n          onDecline={handleDecline}\n          name={name}\n          intro={intro}\n          onInfoUpdate={handleInfoUpdate}\n          chatrooms={chatroomList}\n          onSelect={handleChatroomSelect}\n          invitations={invitations}\n          onLeave={handleChatroomLeave}\n        />\n      </nav>\n      <section className={classes.main}>\n        {\n          index >= 0 \n          ? <Chatroom\n            onRead={handleChatroomRead}\n            onInvite={handleUserInvite(chatroomIndex[index])}\n            socket={socket}\n            key={chatroomIndex[index]}\n            chatroom={chatroomList[index]}\n            onSend={handleSendMessage(chatroomIndex[index])}\n          />\n          : <Lobby socket={socket} onJoin={handleChatroomJoin}/>\n        }\n      </section>\n    </div>\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}