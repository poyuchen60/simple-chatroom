{"version":3,"sources":["components/Modal.js","components/NavigationBar/UserInfoDialog.js","components/NavigationBar/InvitationDialog.js","components/NavigationBar/NavigationBar.js","components/Chatroom/UserInviteDialog.js","components/Chatroom/Chatroom.js","components/Lobby/NewRoomDialog.js","components/Lobby/Lobby.js","App.js","serviceWorker.js","index.js"],"names":["modalRoot","document","getElementById","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","Component","UserInfoDialog","state","name","intro","handleTextChange","event","setState","defineProperty","target","value","handleSubmit","_this$state","_this$props","onSubmit","onClose","_this$props2","connected","_this$state2","react_default","a","Dialog_default","open","DialogTitle_default","DialogContent_default","TextField_default","onChange","margin","label","type","fullWidth","DialogActions_default","Button_default","onClick","color","InvitationDialog","invitations","onDecline","onAccept","maxWidth","List_default","map","_ref","id","user","chatroom","ListItem_default","key","ListItemText_default","primary","concat","ListItemSecondaryAction_default","IconButton_default","aria-label","Check_default","Close_default","NavigationBar","userDialog","invitationDialog","handleDialogOpen","dialog","handleDialogClose","info","onInfoUpdate","classes","chatrooms","index","onSelect","onLeave","react","Typography_default","align","variant","gutterBottom","className","buttonGroup","Face_default","Badge_default","badgeContent","length","Mail_default","Home_default","charoomList","c","i","members","unread","button","Avatar_default","Image_default","secondary","Clear_default","components_Modal","NavigationBar_UserInfoDialog","NavigationBar_InvitationDialog","withStyles","theme","display","justifyContent","width","UserInviteDialog","onInvite","selected","handleSearchUsers","socket","text","emit","users","handleUserSelect","componentDidMount","aria-labelledby","disabled","ChatroomInput","handleEnter","e","shiftKey","preventDefault","handleSubmitSuccess","locked","onSend","inputRef","React","createRef","input","textWraper","autoFocus","onKeyDown","multiline","rowsMax","InputProps","inputText","placeholder","InputLabelProps","shrink","buttonWraper","inputButton","Chatroom","_this2","scrollToBottom","behavior","scrollDownHelper","current","scrollIntoView","componentDidUpdate","_this2$props","_this2$props$chatroom","onRead","atBottom","handleScroll","_this2$messagesDiv$cu","messagesDiv","clientHeight","scrollTop","scrollHeight","selectedMember","undefined","inviteDialog","handleMemberSelect","member","handleInviteDialogOpen","_this$props$chatroom","messages","Chatroom_UserInviteDialog","AppBar_default","position","Toolbar_default","main","message","unreadButton","KeyboardArrowDown_default","ref","onScroll","list","m","Person_default","Chatroom_ChatroomInput","paddingTop","height","flex","backgroundColor","overflowY","paddingLeft","alignItems","left","bottom","zIndex","NewRoomDialog","RoomCard","onJoin","Card_default","card","CardContent_default","CardActions_default","size","Lobby","newRoomDialogOpen","handleLobbySub","on","_ref2","newChatroom","toConsumableArray","push","findIndex","objectSpread","splice","console","log","handleLobbyUnsub","off","componentWillUnmount","prevPros","handleNewChatroom","options","arguments","cardContainer","_ref3","Lobby_RoomCard","Lobby_NewRoomDialog","flexWrap","App","_assertThisInitialize","assertThisInitialized","handleDisconnect","handleLogin","setTimeout","chatroomIndex","forEach","chatroomId","handleUserInvite","inviteeId","handleChatroomRead","other","handleChatroomSelect","handleChatroomJoin","_this$state3","data","_chatrooms$id","sysMsg","userId","handleChatroomLeave","_this$state4","indexOf","newIndex","filter","newChatrooms","handleSendMessage","callback","err","handleInfoUpdate","handleDecline","invitationId","handleAccept","io","_this$state5","chatroomList","container","CssBaseline_default","nav","components_NavigationBar_NavigationBar","components_Chatroom_Chatroom","components_Lobby_Lobby","borderRight","Boolean","window","location","hostname","match","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d510157a.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass UserInfoDialog extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    intro: this.props.intro,\r\n  }\r\n\r\n  handleTextChange = name => \r\n    event => this.setState({[name]: event.target.value});\r\n  \r\n  handleSubmit = () => {\r\n    const { name, intro } = this.state;\r\n    const { onSubmit, onClose } = this.props;\r\n    onSubmit({name, intro});\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const { onClose, connected } = this.props;\r\n    const { name, intro } = this.state;\r\n    const { handleTextChange, handleSubmit } = this;\r\n    return connected\r\n      ? <Dialog\r\n        open={true}\r\n        onClose={onClose}\r\n      >\r\n        <DialogTitle>個人資料</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            value={name}\r\n            onChange={handleTextChange(\"name\")}\r\n            margin=\"dense\"\r\n            label=\"名稱\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={intro}\r\n            onChange={handleTextChange(\"intro\")}\r\n            margin=\"dense\"\r\n            label=\"自我介紹\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose} color=\"primary\">\r\n            取消\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            確定\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      : <Dialog\r\n        open={true}\r\n      ><DialogTitle>伺服器連線中...</DialogTitle></Dialog>\r\n  }\r\n}\r\n\r\n\r\nexport default UserInfoDialog;","import React from 'react';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AcceptIcon from '@material-ui/icons/Check';\r\nimport DeclineIcon from '@material-ui/icons/Close';\r\n\r\nconst InvitationDialog = (props) => {\r\n  const { invitations, onClose, onDecline, onAccept } = props;\r\n\r\n  return <Dialog\r\n    open={true}\r\n    onClose={onClose}\r\n    maxWidth='sm'\r\n    fullWidth\r\n  >\r\n    <DialogTitle>邀請</DialogTitle>\r\n    <DialogContent>\r\n      <List>\r\n        {invitations.map( ({id, user, chatroom}) => <ListItem\r\n          key={id}\r\n        >\r\n          <ListItemText\r\n            primary={`${user} 邀請你至 ${chatroom} 聊天室`}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton onClick={onAccept(id)} aria-label=\"accept\">\r\n              <AcceptIcon />\r\n            </IconButton>\r\n            <IconButton onClick={onDecline(id)} aria-label=\"decline\">\r\n              <DeclineIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>)}\r\n      </List>\r\n    </DialogContent>\r\n  </Dialog>\r\n}\r\n\r\nexport default InvitationDialog;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../Modal';\r\nimport UserInfoDialog from './UserInfoDialog';\r\nimport InvitationDialog from './InvitationDialog';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  buttonGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n  charoomList: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass NavigationBar extends Component {\r\n  state = {\r\n    userDialog: true,\r\n    invitationDialog: false\r\n  }\r\n\r\n  handleDialogOpen = dialog => () => this.setState({[dialog]: true});\r\n  handleDialogClose = () => this.setState({\r\n    userDialog: false,\r\n    invitationDialog: false\r\n  });\r\n  handleSubmit = (info) => {\r\n    const { onInfoUpdate } = this.props;\r\n    onInfoUpdate(info);\r\n  }\r\n\r\n  render(){\r\n    const { handleDialogClose, handleDialogOpen, handleSubmit } = this;\r\n    const { userDialog, invitationDialog } = this.state;\r\n    const {\r\n      classes, chatrooms, invitations, index, connected,\r\n      onSelect, name, intro, onLeave, onDecline, onAccept\r\n    } = this.props;\r\n\r\n    return <Fragment>\r\n      <Typography align='center' variant=\"h3\" gutterBottom>\r\n        Chatroom\r\n      </Typography>\r\n      <div className={classes.buttonGroup}>\r\n        <IconButton\r\n          onClick={handleDialogOpen('userDialog')}\r\n          aria-label=\"UserInfo\"\r\n        >\r\n          <FaceIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDialogOpen('invitationDialog')}          \r\n          aria-label=\"Invitation\"\r\n        >\r\n          <Badge color=\"secondary\" badgeContent={invitations.length}>\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton onClick={onSelect(-1)} aria-label=\"Lobby\">\r\n          <HomeIcon />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.charoomList}>\r\n      {chatrooms.map( (c, i) => {\r\n        const { name, members, id, unread } = c;\r\n        return <ListItem\r\n          onClick={onSelect(i)}\r\n          button \r\n          key={`chatroom(${id})`}\r\n        >\r\n          <Badge color='secondary' badgeContent={index === i ? 0 : unread}>\r\n            <Avatar>\r\n              <ImageIcon />\r\n            </Avatar>\r\n          </Badge>\r\n          <ListItemText primary={name} secondary={`人數: ${members.length}`} />\r\n          <ListItemSecondaryAction>\r\n            <IconButton onClick={onLeave(id)}aria-label=\"LeaveChatroom\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      })}\r\n    </List>\r\n    {userDialog && <Modal>\r\n      <UserInfoDialog\r\n        connected={connected}\r\n        name={name}\r\n        intro={intro}\r\n        onClose={handleDialogClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </Modal>}\r\n    {invitationDialog && !userDialog &&<Modal>\r\n      <InvitationDialog\r\n        onAccept={onAccept}\r\n        onDecline={onDecline}\r\n        invitations={invitations}\r\n        onClose={handleDialogClose}\r\n      />\r\n    </Modal>}\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavigationBar);","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nclass UserInviteDialog extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      users: [],\r\n      selected: [-1],\r\n    }\r\n  }\r\n  handleSubmit = () => {\r\n    const { onInvite, onClose } = this.props;\r\n    const { selected } = this.state;\r\n    if(selected[0] !== -1)\r\n      onInvite(selected[0]);\r\n    onClose();\r\n  }\r\n  handleSearchUsers = () => {\r\n    const { socket } = this.props;\r\n    const { text } = this.state;\r\n    socket.emit('all_users', text , users => this.setState({users}));\r\n  }\r\n  handleUserSelect = (id) => () => this.setState({selected: [id]});\r\n\r\n  componentDidMount = () => {\r\n    this.handleSearchUsers();\r\n  }\r\n\r\n  render(){\r\n    const { handleUserSelect, handleSubmit } = this;\r\n    const { onClose } = this.props;\r\n    const { users, selected } = this.state;\r\n    return <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n      aria-labelledby=\"user-invite-dialog\"\r\n    >\r\n      <DialogTitle>邀請</DialogTitle>\r\n      <DialogContent>\r\n        <List>\r\n          {users.map( ({id, name}) =>\r\n            <ListItem\r\n              button\r\n              selected={selected[0] === id}\r\n              onClick={handleUserSelect(id)}\r\n              key={id}\r\n            >\r\n              <ListItemText primary={name}/>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          disabled={selected[0] === -1}\r\n          color=\"primary\"\r\n        >\r\n          邀請\r\n        </Button>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n      </DialogActions>\r\n  </Dialog>\r\n  }\r\n}\r\n\r\nexport default UserInviteDialog;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../Modal';\r\nimport UserInviteDialog from './UserInviteDialog';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ArrowIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    paddingTop: '5px',\r\n    height: 'calc(100% - 68px)',\r\n    display: 'flex'\r\n  },\r\n  message: {\r\n    flex: 1,\r\n    height: '100%'\r\n  },\r\n  members: {\r\n    width: '200px',\r\n    height: '100%',\r\n    backgroundColor: \"#ffe6e6\",\r\n    overflowY: 'auto'\r\n  },\r\n  list:{\r\n    height: 'calc(100% - 100px)',\r\n    overflowY: 'scroll'\r\n  },\r\n  input: {\r\n    height: '100px',\r\n    backgroundColor: '#e6f7ff',\r\n    display: 'flex',\r\n  },\r\n  inputButton: {\r\n    height: '50px',\r\n  },\r\n  inputText: {\r\n    height: '72px'\r\n  },\r\n  textWraper: {\r\n    flex: 1,\r\n    paddingLeft: '10px'\r\n  },\r\n  buttonWraper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100px'\r\n  },\r\n  unreadButton: {\r\n    position: 'fixed',\r\n    left: '50%',\r\n    bottom: '120px',\r\n    zIndex: 10\r\n  }\r\n})\r\n\r\nclass ChatroomInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = ({\r\n      text: '',\r\n      locked: false\r\n    });\r\n    this.inputRef = React.createRef();\r\n  }\r\n \r\n\r\n  handleEnter = e => {\r\n    if(e.key === 'Enter' && !e.shiftKey){\r\n      e.preventDefault();\r\n      this.handleSubmit();\r\n    }\r\n  }\r\n\r\n  handleTextChange = event => {\r\n    this.setState({text: event.target.value})\r\n  };\r\n  handleSubmitSuccess = () => {\r\n    this.setState({locked: false, text: ''});\r\n  };\r\n  \r\n  handleSubmit = () => {\r\n    const { text, locked } = this.state;\r\n    const { onSend } = this.props;\r\n    if (!locked && text.length > 0){\r\n      onSend(text, this.handleSubmitSuccess);\r\n      this.setState({locked: true});\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    const { text } = this.state;\r\n    const { handleTextChange, handleSubmit, handleEnter, inputRef } = this;\r\n    return <div className={classes.input}>\r\n      <div className={classes.textWraper}>\r\n        <TextField\r\n          autoFocus\r\n          inputRef={inputRef}\r\n          onKeyDown={handleEnter}\r\n          value={text}\r\n          onChange={handleTextChange}\r\n          fullWidth\r\n          multiline\r\n          rowsMax=\"2\"\r\n          InputProps={{className: classes.inputText}}\r\n          label=\"訊息\"\r\n          className={classes.inputText}\r\n          placeholder=\"在此輸入訊息...\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.buttonWraper}>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          color='default'\r\n          className={classes.inputButton}\r\n        >傳送</Button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nclass Chatroom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.scrollDownHelper = React.createRef();\r\n    this.messagesDiv = React.createRef();\r\n    this.state = {\r\n      selectedMember: undefined,\r\n      inviteDialog: false,\r\n      atBottom: true,\r\n    }\r\n  }\r\n  scrollToBottom = (behavior) => this.scrollDownHelper.current\r\n    .scrollIntoView({ behavior: behavior || \"auto\" });\r\n  componentDidUpdate = () => {\r\n    const { chatroom: {id, unread}, onRead } = this.props;\r\n    if(this.state.atBottom){\r\n      this.scrollToBottom('auto');\r\n      unread > 0 && onRead(id);\r\n    }\r\n  }\r\n  componentDidMount = () => this.scrollToBottom('auto');\r\n  handleScroll = () => {\r\n    const {\r\n      clientHeight, scrollTop, scrollHeight\r\n    } = this.messagesDiv.current;\r\n    const atBottom = scrollTop + clientHeight >= scrollHeight;\r\n    (atBottom !== this.state.atBottom) && this.setState({atBottom});\r\n  }\r\n  handleDialogClose = () => this.setState({\r\n    selectedMember: undefined,\r\n    inviteDialog: false\r\n  });\r\n  handleMemberSelect = (member) => this.setState({selectedMember: member});\r\n  handleInviteDialogOpen = () => this.setState({inviteDialog: true});\r\n\r\n  render(){\r\n    const { \r\n      chatroom: {\r\n        name, members, messages, unread\r\n      },\r\n      classes, onSend, socket, onInvite\r\n    } = this.props;\r\n    const { selectedMember, inviteDialog } = this.state;\r\n    const {\r\n      handleDialogClose, handleMemberSelect, handleInviteDialogOpen,\r\n      handleScroll, scrollToBottom\r\n    } = this;\r\n    return <Fragment>\r\n      {selectedMember && <Modal>\r\n        <Dialog\r\n          open={true}\r\n          onClose={handleDialogClose}\r\n          aria-labelledby=\"chatroom-member-dialog\"\r\n        >\r\n          <DialogTitle>{selectedMember.name}</DialogTitle>\r\n          <DialogContent>{selectedMember.intro}</DialogContent>\r\n        </Dialog>\r\n      </Modal>}\r\n      { inviteDialog && !selectedMember && <Modal>\r\n        <UserInviteDialog\r\n          onInvite={onInvite}\r\n          onClose={handleDialogClose}\r\n          socket={socket}\r\n        />\r\n      </Modal>}\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {name}\r\n          </Typography>\r\n          <Button\r\n            color='inherit'\r\n            onClick={handleInviteDialogOpen}\r\n          >邀請</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.main}>\r\n        <div className={classes.message}>\r\n            {unread > 0 && <Button\r\n              onClick={() => scrollToBottom()}\r\n              className={classes.unreadButton}\r\n            >{`新訊息: ${unread}`}<ArrowIcon /></Button>}\r\n          <div\r\n            ref={this.messagesDiv}\r\n            onScroll={handleScroll}\r\n            className={classes.list}\r\n          >\r\n            <List className={classes.charoomList}>\r\n              {messages.map( (m, index) => {\r\n                const { name, text } = m;\r\n                return <ListItem\r\n                  key={index}\r\n                >\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                  <ListItemText primary={name} secondary={text}/>\r\n                </ListItem>\r\n              })}\r\n            </List>\r\n            <div ref={this.scrollDownHelper}></div>\r\n          </div>\r\n          <ChatroomInput classes={classes} onSend={onSend}/>\r\n        </div>\r\n        <aside className={classes.members}>\r\n          <List>\r\n            {members.map( m => {\r\n              const { name, id } = m;\r\n              return <ListItem\r\n                button \r\n                onClick={() => handleMemberSelect(m)}\r\n                key={`user#${id}`}\r\n              >\r\n                <Avatar>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n                <ListItemText primary={name}/>\r\n              </ListItem>\r\n            })}\r\n          </List>\r\n        </aside>\r\n      </div>\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Chatroom);","import React, { Component } from 'react';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass NewRoomDialog extends Component {\r\n  state = {\r\n    name: ''\r\n  }\r\n\r\n  handleTextChange = event => this.setState({name: event.target.value});\r\n  handleSubmit = () => {\r\n    const { onSubmit, onClose } = this.props;\r\n    const { name } = this.state;\r\n    onSubmit({name});\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const { name } = this.state;\r\n    const { onClose } = this.props;\r\n    const { handleTextChange, handleSubmit } = this;\r\n    return <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>建立新聊天室</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          value={name}\r\n          onChange={handleTextChange}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"房名\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  }\r\n}\r\n\r\n\r\nexport default NewRoomDialog;","import React, { Component } from 'react';\r\nimport Modal from '../Modal';\r\nimport NewRoomDialog from './NewRoomDialog';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 200,\r\n    margin: 10\r\n  },\r\n  cardContainer: {\r\n    margin: 20,\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  }\r\n});\r\n\r\nconst RoomCard = ({name, members, classes, onJoin}) => <Card className={classes.card}>\r\n  <CardContent>\r\n    <Typography variant=\"h6\">\r\n      {name}\r\n     </Typography>\r\n    <Typography color=\"textSecondary\" gutterBottom>\r\n      {`成員: ${members}`}\r\n    </Typography>\r\n  </CardContent>\r\n  <CardActions>\r\n    <Button onClick={onJoin} size=\"small\">Join</Button>\r\n  </CardActions>\r\n</Card>\r\n\r\nclass Lobby extends Component {\r\n  state = {\r\n    chatrooms: [],\r\n    newRoomDialogOpen: false\r\n  }\r\n  handleLobbySub = () => {\r\n    const { socket } = this.props;\r\n    socket.emit(\"join_lobby\", chatrooms => {\r\n      this.setState({chatrooms}, () => {\r\n        socket.on(\"lobby\", ({type, value}) => {\r\n          let chatrooms = [...this.state.chatrooms];\r\n          let index, newChatroom;\r\n          switch(type){\r\n            case \"new_chatroom\":\r\n              chatrooms.push(value);\r\n              break;\r\n            case \"new_member\":\r\n              index = chatrooms.findIndex( c => c.id === value);\r\n              newChatroom = {...chatrooms[index]};\r\n              newChatroom.members = newChatroom.members + 1;\r\n              chatrooms.splice(index, 1, newChatroom);\r\n              break;\r\n            case \"delete_member\":\r\n              index = chatrooms.findIndex( c => c.id === value);\r\n              newChatroom = {...chatrooms[index]};\r\n              newChatroom.members = newChatroom.members - 1;\r\n              chatrooms.splice(index, 1, newChatroom);\r\n              break;\r\n            default:\r\n              console.log(\"default\");\r\n          }\r\n          this.setState({chatrooms});\r\n        });\r\n      })\r\n    })\r\n  }\r\n  handleLobbyUnsub = () => {\r\n    const { socket } = this.props;\r\n    socket.off(\"lobby\");\r\n  }\r\n  componentDidMount = () => {\r\n    this.props.connected && this.handleLobbySub();\r\n  }\r\n  componentWillUnmount = () => {\r\n    this.handleLobbyUnsub();\r\n  }\r\n  componentDidUpdate = (prevPros) => {\r\n    const { connected } = this.props;\r\n    if(connected !== prevPros.connected){\r\n      connected\r\n      ? this.handleLobbySub()\r\n      : this.handleLobbyUnsub()\r\n    }\r\n  }\r\n  handleNewChatroom = (options={}) => {\r\n    const { socket } = this.props;\r\n    socket.emit('create_chatroom', options);\r\n  }\r\n  handleDialogOpen = () => this.setState({newRoomDialogOpen: true});\r\n  handleDialogClose = () => this.setState({newRoomDialogOpen: false});\r\n\r\n  render(){\r\n    const { classes, onJoin, connected } = this.props;\r\n    const { chatrooms, newRoomDialogOpen } = this.state;\r\n    const {\r\n      handleNewChatroom,\r\n      handleDialogOpen, handleDialogClose\r\n    } = this;\r\n    return <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Lobby\r\n          </Typography>\r\n          <Button\r\n            disabled={!connected}\r\n            onClick={handleDialogOpen}\r\n            color='inherit'\r\n          >New</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.cardContainer}>\r\n        {connected\r\n          ? chatrooms.map( ({name, members, id}) =>\r\n            <RoomCard\r\n              key={id}\r\n              name={name}\r\n              members={members}\r\n              classes={classes}\r\n              onJoin={onJoin(id)}\r\n            />\r\n          )\r\n          : <Typography variant=\"h5\" gutterBottom>\r\n            連線中\r\n          </Typography>\r\n        }\r\n      </div>\r\n      {newRoomDialogOpen && <Modal>\r\n        <NewRoomDialog\r\n          onSubmit={handleNewChatroom}\r\n          onClose={handleDialogClose}\r\n        />\r\n      </Modal>}\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Lobby);","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\n\r\nimport NaviationBar from './components/NavigationBar/NavigationBar';\r\nimport Chatroom from './components/Chatroom/Chatroom';\r\nimport Lobby from './components/Lobby/Lobby'\r\nimport './App.css';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst styles = theme => ({\r\n  container:{\r\n    height: '100%',\r\n    display: 'flex'\r\n  },\r\n  nav: {\r\n    paddingTop: '50px',\r\n    width: '300px',\r\n    borderRight: '1px solid gray',\r\n    height: '100%'\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    height: '100%'\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      socket:  io('https://infinite-waters-19418.herokuapp.com/'),\r\n      connected: false,\r\n      invitations: [],\r\n      index: -1,\r\n      chatrooms: {},\r\n      chatroomIndex: [],\r\n      name: '', intro: '', id: -1,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { socket } = this.state;\r\n    const { handleDisconnect, handleLogin } = this;\r\n    socket.on('connect', () => {\r\n      setTimeout(handleLogin, 500);\r\n    });\r\n    socket.on('disconnect', () => {\r\n      handleDisconnect();\r\n    })\r\n  }\r\n\r\n  handleDisconnect = () => {\r\n    const { socket, id, chatroomIndex } = this.state;\r\n    socket.off(`user#${id}`);\r\n    chatroomIndex.forEach(\r\n      chatroomId => socket.off(`chatroom#${chatroomId}`)\r\n    )\r\n    this.setState({\r\n      chatrooms: {},\r\n      chatroomIndex: [],\r\n      index: -1,\r\n      connected: false\r\n    })\r\n  }\r\n  handleLogin = () => {\r\n    const { socket, id } = this.state;\r\n    socket.emit('login', id, (info) => {\r\n      this.setState({...info, connected: true},\r\n        () => socket.on(`user#${info.id}`, ({type, value}) => {\r\n          let { invitations } = this.state;\r\n          switch(type){\r\n            case 'new_invitation':\r\n              invitations = [...invitations, value];\r\n              break;\r\n            default:\r\n              console.log('default');\r\n          }\r\n          this.setState({invitations});\r\n        })\r\n      );\r\n    });\r\n  }\r\n  handleUserInvite = (chatroomId) => (inviteeId) => {\r\n    const { socket } = this.state;\r\n    socket.emit('invite_user', {\r\n      inviteeId, chatroomId\r\n    }, console.log);\r\n  }\r\n  handleChatroomRead = (id, other) => {\r\n    const { chatrooms } = this.state;\r\n    const newChatroom = {...chatrooms[id], unread: 0}\r\n    this.setState({...other, chatrooms: {...chatrooms, [id]: newChatroom}});\r\n  }\r\n  handleChatroomSelect = (index) => () => {\r\n    if(index === this.state.index)\r\n      return;\r\n    else if(index >= 0){\r\n      const id = this.state.chatroomIndex[index];\r\n      this.handleChatroomRead(id, {index})\r\n    } else {\r\n      this.setState({index});\r\n    }\r\n  }\r\n  handleChatroomJoin = (chatroomId) => () => {\r\n    const { socket } = this.state;\r\n    socket.emit(\"join_chatroom\", chatroomId, chatroom => {\r\n      if(!chatroom) return;\r\n      const { chatrooms, chatroomIndex } = this.state;\r\n      const { id } = chatroom;\r\n      this.setState({\r\n        chatrooms: {...chatrooms, [id]: {...chatroom, unread: 0}},\r\n        chatroomIndex: [...chatroomIndex, id]\r\n      }, () => {\r\n        socket.on(`chatroom#${id}`, data => {\r\n          const { type, value } = data;\r\n          const { chatrooms } = this.state;\r\n          let { members, messages, name, unread } = chatrooms[id];\r\n          let i = -1, sysMsg = undefined;\r\n          switch(type){\r\n            case \"new_message\":\r\n              messages = [...messages, value];\r\n              unread = unread + 1;\r\n              break;\r\n            case \"new_member\":\r\n              members = [...members, value];\r\n              sysMsg = {\r\n                name: '系統訊息',\r\n                text: `${value.name || `User#${value.id}`} 加入聊天室`\r\n              }\r\n              break;\r\n            case \"delete_member\":\r\n              i = members.findIndex( m => m.id === value)\r\n              if(i >= 0){\r\n                sysMsg = {\r\n                  name: '系統訊息',\r\n                  text: `${members[i].name} 離開聊天室`\r\n                }\r\n                members.splice(i, 1);\r\n              }\r\n              break;\r\n            case \"update_member\":\r\n              i = members.findIndex( m => m.id === value.id);\r\n              messages = messages.map(m =>\r\n                m.userId === value.id \r\n                ? {...m, name: value.name}\r\n                : m\r\n              );\r\n              sysMsg = value.name === members[i].name\r\n                ? undefined\r\n                : {\r\n                  name: \"系統訊息\",\r\n                  text: `${members[i].name} 改名為 ${value.name}`\r\n                }\r\n              members.splice(i, 1, value);\r\n              break;\r\n            default:\r\n              console.log(\"default\");\r\n          }\r\n          this.setState({chatrooms: {...chatrooms, [id]:\r\n            {id, name, members, unread,\r\n              messages: sysMsg ? messages.concat(sysMsg) : messages\r\n            }\r\n          }});\r\n        })\r\n      })\r\n    })\r\n  }\r\n  handleChatroomLeave = chatroomId => () => {\r\n    const { socket } = this.state;\r\n    socket.emit(\"leave_chatroom\", chatroomId, id => {\r\n      if(id !== chatroomId ) console.log('Wrong!!')\r\n      else {\r\n        socket.off(`chatroom#${id}`);\r\n        const { chatrooms, chatroomIndex, index } = this.state;\r\n        const i = chatroomIndex.indexOf(id);\r\n        const newIndex = chatroomIndex.filter( i => i !== id);\r\n        const newChatrooms = { ...chatrooms, [id]: undefined};\r\n        this.setState({\r\n          chatrooms: newChatrooms,\r\n          chatroomIndex: newIndex,\r\n          index: index > i\r\n            ? index - 1\r\n            : index === i ? -1 : index,\r\n        });\r\n      }\r\n    })\r\n  }\r\n  handleSendMessage = chatroomId => (text, callback) => {\r\n    const { socket } = this.state;\r\n    socket.emit(\"new_message\", {chatroomId, text}, (err) => {\r\n      if(!err) callback && callback();\r\n    });\r\n  }\r\n  handleInfoUpdate = (info={}) => {\r\n    const { socket } = this.state;\r\n    socket.emit(\"update_info\", info, ({name, intro}) => {\r\n      this.setState({name, intro});\r\n    });\r\n  }\r\n  handleDecline = (invitationId) => () => {\r\n    const { socket } = this.state;\r\n    socket.emit('decline_invitation', invitationId, (err) => {\r\n      if(!err){\r\n        const invitations = this.state.invitations.filter( i => i.id !== invitationId);\r\n        this.setState({invitations});\r\n      }\r\n    })\r\n  }\r\n  handleAccept = (invitationId) => () => {\r\n    const { socket } = this.state;\r\n    socket.emit('accept_invitation', invitationId, (err, chatroomId) => {\r\n      if(!err){\r\n        const invitations = this.state.invitations.filter( i => i.id !== invitationId);\r\n        this.setState({invitations}, this.handleChatroomJoin(chatroomId));\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      chatroomIndex, chatrooms, index,\r\n      invitations, socket, name, intro, connected\r\n    } = this.state;\r\n    const {\r\n      handleChatroomSelect,\r\n      handleChatroomJoin, handleSendMessage,\r\n      handleInfoUpdate, handleChatroomLeave, handleUserInvite,\r\n      handleDecline, handleAccept, handleChatroomRead\r\n    } = this;\r\n    const chatroomList = chatroomIndex.map( id => chatrooms[id]);\r\n    return <div className={classes.container}>\r\n      <CssBaseline />\r\n      <nav className={classes.nav}>\r\n        <NaviationBar\r\n          connected={connected}\r\n          index={index}\r\n          onAccept={handleAccept}\r\n          onDecline={handleDecline}\r\n          name={name}\r\n          intro={intro}\r\n          onInfoUpdate={handleInfoUpdate}\r\n          chatrooms={chatroomList}\r\n          onSelect={handleChatroomSelect}\r\n          invitations={invitations}\r\n          onLeave={handleChatroomLeave}\r\n        />\r\n      </nav>\r\n      <section className={classes.main}>\r\n        { index >= 0 \r\n          ? <Chatroom\r\n            onRead={handleChatroomRead}\r\n            onInvite={handleUserInvite(chatroomIndex[index])}\r\n            socket={socket}\r\n            key={chatroomIndex[index]}\r\n            chatroom={chatroomList[index]}\r\n            onSend={handleSendMessage(chatroomIndex[index])}\r\n          />\r\n          : <Lobby\r\n            connected={connected}\r\n            socket={socket}\r\n            onJoin={handleChatroomJoin}\r\n          />\r\n        }\r\n      </section>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}